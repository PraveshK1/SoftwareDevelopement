<?xml version="1.0" standalone="no"?>
<!DOCTYPE page SYSTEM "../../page.dtd">
<page xmlns:ac="http://www.atlassian.com/schema/confluence/4/ac/" xmlns:ri="http://www.atlassian.com/schema/confluence/4/ri/">
  <space>storage</space>
  <title>Data Flow Diagrams</title>
  <lower-title>data flow diagrams</lower-title>
  <body><hr /><p><strong>OVERVIEW</strong>  <br />When an integrations team needs a standardized way of documenting system data flows and process flows to make design decisions and come up with an Architecture.  <br />The most effective way the Data Flow Diagram model (DFD).  <br />This document aims to define the DFD Methodology (there are four).</p><hr /><p><strong>WHAT IS A DATA FLOW DIAGRAM (DFD)?</strong>  <br />A data flow diagram is a visual representation of processes and functions in a system.  <br />These capture, store, manipulate and distribute data between a system and its environment.  <br />Likewise, they show how that goes with data between system components.</p><hr /><p><strong>DATA FLOW METHODOLOGIES</strong>  <br />There are four data flow methodologies (REF1) as shown in the diagram below, namely Yourdon &amp; De Marco, Gene &amp; Sarson, SSADM, and Unified, each of which has slight variations of symbols.  <br />It is important to identify which methodology has been used when reading DFDs to not mistake the symbols from each.</p><ac:image ac:align="center" ac:layout="center" ac:original-height="206" ac:original-width="377" ac:custom-width="true" ac:alt="DFD Methologies.png" ac:width="377"><ri:attachment ri:filename="DFD Methologies.png" ri:version-at-save="1" /></ac:image><p /><hr /><p><strong>SELECTED DIAGRAM METHODOLOGY</strong>  <br />As a team, it was decided to select a single DFD methodology going forward for diagrams to avoid confusion and keep a consistent standard.  <br />Diagram selection was first looked at from popularity and then the one which is supported by the diagramming tool used namely <a href="http://Draw.io" data-card-appearance="inline">http://Draw.io</a> .  <br />Using these criteria, Yourdon &amp; De Marco was chosen.  <br />It is important to note that when reading a DFD from any other sources it would be important as a first step to identify which diagramming methodology was used, to not confuse.</p><hr /><p><strong>DATA FLOW DIAGRAM TYPES</strong>  <br />There are two types of Data Flow Diagrams. These are normally drawn by different roles in the organization and show different points of view i.e. perspectives. (REF4)</p><ac:image ac:align="center" ac:layout="center" ac:original-height="220" ac:original-width="687" ac:custom-width="true" ac:alt="DFD Types.png" ac:width="687"><ri:attachment ri:filename="DFD Types.png" ri:version-at-save="1" /></ac:image><p /><hr /><p><strong>LOGICAL</strong>  </p><ul><li><p>View from a Business Perspective  </p></li><li><p>What will happen  </p></li><li><p>Business Operation and Goals  </p></li><li><p>BA/SA Creates</p></li></ul><hr /><p><strong>PHYSICAL</strong>  </p><ul><li><p>System Perspective  </p></li><li><p>How data will happen  </p></li><li><p>System Implementation  </p></li><li><p>Dev/DBA Creates</p></li></ul><hr /><p>Here’s the full transcription from your image, presented in plain text with clear headings and spacing for easy copying into any document:</p><hr /><p><strong>ELEMENTS AND SYMBOLS OF DATA FLOW DIAGRAM USING YOURDON &amp; DE MARCO METHODOLOGY</strong></p><p><strong>ENTITY</strong>  </p><p><ac:image ac:original-height="25" ac:original-width="70" ac:inline="true" ac:alt="Entity.png"><ri:attachment ri:filename="Entity.png" ri:version-at-save="1" /></ac:image> </p><ul><li><p>Used for external actors, sources or sinks, and terminators.  </p></li><li><p>Data must not flow between two Entities.  </p></li><li><p>Produces and consumes the data flowing between the entity and the process.  </p></li><li><p>Used as the sources and destinations of the data.</p></li></ul><p /><p><strong>PROCESS</strong>  </p><p><ac:image ac:original-height="40" ac:original-width="49" ac:inline="true" ac:alt="Process.png"><ri:attachment ri:filename="Process.png" ri:version-at-save="1" /></ac:image> </p><ul><li><p>Shows the process that&apos;s occurring or the task being performed on the data.  </p></li><li><p>It is an activity that transforms or modifies the data flow.  </p></li><li><p>The name should be made up of a Verb and a Noun (e.g., Get Employee Data).  </p></li><li><p>Inputs come in from the left and main outputs exit on the right.  </p></li><li><p>Secondary flows come out from the bottom of the object.  </p></li><li><p>Data from sources coming into the process come in from the top of the object.  </p></li><li><p>Must have at least one input and one output.  </p></li><li><p>Cannot have more outputs than the sum of inputs.  </p></li><li><p>The number of Processes on a DFD should not exceed twelve.  </p></li><li><p>All Processes must be linked to another Process or a Data Store.</p></li></ul><p /><p><strong>DATA STORE</strong>  </p><p><ac:image ac:original-height="40" ac:original-width="62" ac:inline="true" ac:alt="Data Store.png"><ri:attachment ri:filename="Data Store.png" ri:version-at-save="1" /></ac:image> </p><ul><li><p>This could be the system’s database, web API that is used to retrieve data, etc.  </p></li><li><p>Data must not flow between Data Stores.  </p></li><li><p>Its function is not to generate any operations but to hold data for later use.  </p></li><li><p>Must have a minimum of one data flow in or out.  </p></li><li><p>Should flow in and out of Processes.  </p></li><li><p>Must have an input and output Data Flow.</p></li></ul><p /><p><strong>DATA FLOW</strong>  </p><p><ac:image ac:original-height="26" ac:original-width="72" ac:inline="true" ac:alt="Data Flow.png"><ri:attachment ri:filename="Data Flow.png" ri:version-at-save="1" /></ac:image> </p><ul><li><p>Shows movements between entities, data stores, and processes.  </p></li><li><p>They have a label indicating the type of data being exchanged.  </p></li><li><p>If the data flow goes into a data store with the same name then the flow doesn’t need a name.  </p></li><li><p>Must have a name except for the condition above.  </p></li><li><p>Do not group unrelated data into one data flow if they are not treated as one unit of data.</p></li></ul><p /><p><strong>FLOW RULES BETWEEN COMPONENTS</strong></p><p>Entity to Process Rules  </p><ul><li><p>Data must flow from Entity to Process or vice versa.  </p></li><li><p>The number of multiple data flows from one Entity to a Process.</p></li></ul><p>Data Store to Entity  </p><ul><li><p>Data cannot flow from an Entity to a Data Store.  </p></li><li><p>Data must be transformed by a process before going to the Data Store and vice versa.</p></li></ul><p>Process to Data Store Rules  </p><ul><li><p>Data must flow from Process to Data Store or vice versa.  </p></li><li><p>A Data Store must have both an input and output data flow.  </p></li><li><p>Data can flow from the Data Store to multiple Processes.  </p></li><li><p>The number of Processes on a DFD should not exceed twelve.</p></li></ul><p /><p>Absolutely, Pravesh. Here&apos;s the full transcription from your latest image, formatted in plain text with clear headings and spacing—perfect for pasting into documentation:</p><hr /><p><strong>DATA FLOW DIAGRAM LEVELS</strong></p><p><strong>CONTEXT LEVEL</strong>  </p><p /><ac:structured-macro ac:name="drawio" ac:schema-version="1" data-layout="default" ac:local-id="009eed4e-1e63-4149-82a8-c69e442438cd" ac:macro-id="84df1a4a-5260-4044-acb9-26d2f58482a7"><ac:parameter ac:name="mVer">2</ac:parameter><ac:parameter ac:name="zoom">1</ac:parameter><ac:parameter ac:name="simple">0</ac:parameter><ac:parameter ac:name="inComment">0</ac:parameter><ac:parameter ac:name="custContentId">295042</ac:parameter><ac:parameter ac:name="pageId">622662</ac:parameter><ac:parameter ac:name="lbox">1</ac:parameter><ac:parameter ac:name="diagramDisplayName">DataFlowExample.drawio</ac:parameter><ac:parameter ac:name="contentVer">1</ac:parameter><ac:parameter ac:name="revision">1</ac:parameter><ac:parameter ac:name="baseUrl">https://orignals.atlassian.net/wiki</ac:parameter><ac:parameter ac:name="diagramName">DataFlowExample.drawio</ac:parameter><ac:parameter ac:name="pCenter">0</ac:parameter><ac:parameter ac:name="width">581</ac:parameter><ac:parameter ac:name="links" /><ac:parameter ac:name="tbstyle" /><ac:parameter ac:name="height">121</ac:parameter></ac:structured-macro><ul><li><p>Only one Process shows the entire system.  </p></li><li><p>Shows how Entities interact with the system.  </p></li><li><p>Doesn&apos;t show Data Stores.  </p></li><li><p>Flow lines are used to show data from External Entity to Process.  </p></li><li><p>Flow lines also show information flowing from a Process to an External Entity.</p></li></ul><p /><hr /><p><strong>LEVEL 0</strong>  </p><ul><li><p>The Processes only have numbers i.e. 1.0, 2.0, 3.0.  </p></li><li><p>Can have many Processes.  </p></li><li><p>The output of one Process can flow into another Process.  </p></li><li><p>Shows Data Stores i.e. Database.</p></li></ul><hr /><p><strong>LEVEL 1</strong>  </p><ul><li><p>Only shows sub-Processes.  </p></li><li><p>Processes are exploded and identified using their Level 0 designation with a minor version i.e. 1.1, 1.2, 1.3.  </p></li><li><p>The output of one Process can flow into another Process.  </p></li><li><p>Shows Data Stores i.e. Database.  </p></li><li><p>External Entities are optional.</p></li></ul><hr /><p><strong>LEVEL 2 - N (WHERE N &lt; MAX 7)</strong>  </p><ul><li><p>Used to show more detail around a Process.  </p></li><li><p>Sub Processes from Level are broken down even further i.e. 1.11, 1.12, 1.13.  </p></li><li><p>Use this level to break up Processes into smaller components.</p></li></ul><hr /><p><strong>RULES WHEN MOVING BETWEEN DFD LEVEL 0 (CONTEXT DIAGRAM) TO LEVEL 1</strong>  </p><ul><li><p>The one big Process needs to be decomposed into individual sub-Processes.  </p></li><li><p>Each Sub Process needs to be numbered using whole numbers.  </p></li><li><p>Data Stores for each Sub Process need to be shown.</p></li></ul><hr /><p><strong>RULES WHEN MOVING BETWEEN DFD LEVEL 1 TO LEVEL 2</strong>  </p><ul><li><p>Pick one Sub Process and break it up into further Sub Processes (Only one—if another needs to be broken up it would need a separate diagram).  </p></li><li><p>Each Sub Process needs to have its original major number and a minor number.</p></li></ul><hr /><p><strong>REFERENCES</strong>  <br />(1) Guide on Data Flow Diagrams – <a href="https://blog.hubspot.com/marketing/data-flow-diagram" data-card-appearance="inline">https://blog.hubspot.com/marketing/data-flow-diagram</a>   <br />(2) Data Flow Diagram Tutorial  <br />(3) Data Flow Diagrams, Introduction to Data Flow Diagrams, Level 1 Data Flow Diagram (DFD), Level 2 Data Flow Diagram (DFD)  <br />(4) Data Flow Diagrams by The Business Analysis Doctor – Data Flow Diagrams</p><p /><p /></body>
  <category>storage-team</category>
  <category>confluence</category>
</page>
